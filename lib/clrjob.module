#!/bin/bash

#  Jobs management application for the Linux OS
#  $Revision: 1.66 $
#
#  Copyright (C) 2008-2017 Jordi Pujol <jordipujolp AT gmail DOT com>
#
#  This file is part of the LneT Jobadmin package,
#   http://livenet.ddns.net .
#
#  This program is free software; you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation; either version 1, or (at your option)
#  any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program; if not, write to the Free Software
#  Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
#
#  Please report bugs to <jordipujolp AT gmail DOT com>.
#
#
#************************************************************************

# Clear Job history

_clrjob_usage="Clear Job history

clrjob -j|--job 'JOBNAME'

Clear Job history of executions data"

_clrjob_options="JA_JOB pr@
JA_USR pr@
JA_PIDL pr@
JA_KEEP pr@"

_clrjob_by_pid() {
	# global rc attrs job_pids
	local job_pid="${1}"
	local f found ja_pids

	found=""
	while read f; do
		[ -e "${f}" ] || \
			continue
		rm -f "${f}"
		found="y"
	done < <(find "${JA_JOB_DIR}" -maxdepth 1 -type f \
	-name "job-${job_pid}[^[:digit:]]*")
	if [ -n "${found}" ]; then
		_usr_notify "Removing job execution '${JA_JOB}.${JA_USR}.${job_pid}'."
		if ja_pids="$(sed -nre "\|\b("${job_pid}")\b[^[:blank:]]+[[:blank:]]*| \
		{s|||p;q0};q1" <<< "${job_pids}")"; then
			job_pids="${ja_pids}"
			_set_option "${attrs}" "JA_PIDS" "${ja_pids}"
		fi
	else
		rc=1
		_usr_notify "Error: job execution '${JA_JOB}.${JA_USR}.${job_pid}' doesn't exist."
	fi
}

_clrjob() {
	local fd1 job_pid
	local rc attrs job_pids # global

	if ! _test_rw "${JA_JOB_DIR}"; then
		_usr_notify "Error: Not authorized to delete job '${JA_JOB}.${JA_USR}'."
		return 1
	fi

	( if ! flock --exclusive --timeout 1 ${fd1}; then
		_usr_notify "Error: job '${JA_JOB}.${JA_USR}' is locked."
		return 1
	fi
	rc=0
	if [ "${JA_PIDL}" = "all" ]; then
		( set +o noglob 
		while IFS= read -r job_cmd; do
			rm -f "${job_cmd%".cmd"}"[.-]*
		done < <( ls -1t "${JA_JOB_DIR}job-"*.cmd | \
		tail -qn "+$((JA_KEEP+1))" ) )

		attrs="${JA_JOB_DIR}job.attrs"
		if [ ${JA_KEEP} = 0 ]; then
			_set_option "${attrs}" "JA_PIDS" ""
		else
			_set_option "${attrs}" "JA_PIDS" \
				"$(_read_option "JA_PIDS" "${attrs}" | \
				awk -v ja_keep=${JA_KEEP} \
				'{for (i=1; i <= NF-ja_keep; i++) $i=""
				gsub(/^[[:blank:]]+|[[:blank:]]+$/, "")
				print}')"
		fi
	elif [ "${JA_KEEP}" != 0 ]; then
		_usr_notify "Error: Can't remove some exec pids while keeping a fixed number."
		return 1
	else
		attrs="${JA_JOB_DIR}job.attrs"
		if job_pids="$(_read_option "JA_PIDS" "${attrs}")"; then
			for job_pid in $(tr -s ',' ' ' <<< "${JA_PIDL}"); do
				_clrjob_by_pid "${job_pid}"
			done
		else
			_usr_notify "Warning: no executions exist for '${JA_JOB}.${JA_USR}'."
		fi
	fi

	return $rc
	) {fd1}< "$(_flock_lckfile "${JA_JOB_DIR}")"
} # clrjob
