#!/bin/bash

#  Jobs management application for the Linux OS
#  $Revision: 1.66 $
#
#  Copyright (C) 2008-2017 Jordi Pujol <jordipujolp AT gmail DOT com>
#
#  This file is part of the LneT Jobadmin package,
#   http://livenet.ddns.net .
#
#  This program is free software; you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation; either version 1, or (at your option)
#  any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program; if not, write to the Free Software
#  Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
#
#  Please report bugs to <jordipujolp AT gmail DOT com>.
#
#
#************************************************************************

# dspoutq

_dspoutq_options="JA_OUTQ rp"

_dspoutq() {
	local outq splf splf_attrs
	local job usr job_pid fd1

	outq="${JA_SPOOL}${JA_OUTQ}.outq"

	if ! test -r "${outq}"; then
		_usr_notify "Error: Not authorized to manage output queue '${JA_OUTQ}'."
		return 1
	fi

	( if ! flock --shared --timeout 1 ${fd1}; then
		_usr_notify "Error: output queue '${JA_OUTQ}' is locked."
		return 1
	fi
	( printf "Output queue '%s':\n" "${JA_OUTQ}"
	cat "${outq}"
	unset splf_attrs
	while read splf_attrs; do
		[ -s "${splf_attrs}" ] || continue
		job="$(basename "$(dirname "${splf_attrs}")" ".job")"
		usr="$(stat -c "%U" "${splf_attrs}")"
		job_pid="$(basename "${splf_attrs}" | \
			sed -re '\|job-([[:digit:]]+)-.*| s||\1|')"
		splf="$(basename "${splf_attrs}" | \
			sed -re '\|job-[[:digit:]]+-(.*)\.splfa| s||\1|')"
		if test -r "${splf_attrs}"; then
			if [ "$(_read_option "JA_OUTQ" "${splf_attrs}")" = "${JA_OUTQ}" ]; then
				sts="$(_read_option "JA_SPLF_STS" "${splf_attrs}")" || sts="RDY"
				printf "Spool file '%s %s.%s.%s', Status:'%s'\n" \
					"${splf}" "${job}" "${usr}" "${job_pid}" "${sts}"
				cat "${splf_attrs}"
			fi
		else
			_usr_notify "Error: Not authorized to read spool file '${splf} ${job}.${usr}.${job_pid}'."
		fi
		unset splf_attrs
	done < <(_find_job_files "*.splfa" "")
	) | pager
	) {fd1}< "$(_flock_lckfile "${outq}")"
} # dspoutq
