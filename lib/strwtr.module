#!/bin/bash

#  Jobs management application for the Linux OS
#  $Revision: 1.66 $
#
#  Copyright (C) 2008-2017 Jordi Pujol <jordipujolp AT gmail DOT com>
#
#  This file is part of the LneT Jobadmin package,
#   http://livenet.ddns.net .
#
#  This program is free software; you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation; either version 1, or (at your option)
#  any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program; if not, write to the Free Software
#  Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
#
#  Please report bugs to <jordipujolp AT gmail DOT com>.
#
#
#************************************************************************

# strwtr

_strwtr_options="JA_WTR pr@
JA_OUTQL p@
JA_PRT"

_strwtr() {
	local wtr hld found
	local wtr1 prt wtr_eml wtr_action wtr_autostr

	wtr="${JA_SPOOL}${JA_WTR}.wtr"

	if ! _test_rw "${wtr}"; then
		_usr_notify "Error: Not authorized to manage writer '${JA_WTR}'."
		return 1
	fi

	hld="$(_read_option "JA_HLD" "${JA_SPOOL}${JA_WTR}.wtr.attrs")" || :
	if ! dummy="$(_read_option "JA_WTR_STS" "${wtr}")"; then
		_usr_notify "Warning: ${hld:+"Held "}writer '${JA_WTR}' is already active,\
 using output queues '$(_read_option "JA_WTR_OUTQS" "${wtr}")'."
		return 0
	fi

	if [ -z "${JA_OUTQL}" ]; then
		JA_OUTQL="$(awk -v wtr="${JA_WTR}" '$2 == wtr {print $1}' "${JA_CONF_OUTQS}" | sort)"
	elif grep -qswe "all" <<< "${JA_OUTQL}"; then
		JA_OUTQL="$(awk '{print $1}' "${JA_CONF_OUTQS}" | sort)"
	fi
	JA_OUTQL="$(tr -s '[,[:blank:]]' '\n' <<< "${JA_OUTQL}" | \
		sort | \
		_comma_separated)"
	if [ -z "${JA_PRT}" ]; then
		JA_PRT="$(awk -v wtr="${JA_WTR}" '$1 == wtr {print $2}' "${JA_CONF_WTRS}")"
		grep -qswe "${JA_PRT}" "${JA_TMP}rprts.lst" || \
			JA_PRT="$(awk 'BEGIN{FS=","}{print $1}' "${JA_TMP}rprts.lst")"
	fi

	found=""; foundprt=""
# 	_usr_notify "Checking if output queues '${JA_OUTQL}' are available."
# 	_usr_notify "Checking if printer '${JA_PRT}' is available."
	unset wtr1 prt wtr_eml wtr_action wtr_autostr wtr_perms
	while read wtr1 prt wtr_eml wtr_action wtr_autostr wtr_perms rest; do
		[ -n "${wtr1}" ] || continue
		if ! _read_option "JA_WTR_STS" "${JA_SPOOL}${wtr1}.wtr" > /dev/null 2>&1; then
			for outq in $(_read_option "JA_WTR_OUTQS" "${JA_SPOOL}${wtr1}.wtr"); do
				[ -n "${outq}" ] || continue
				! grep -qswe "${outq}" <<< "${JA_OUTQL}" || \
					found="${found:+"${found} "}${outq}/${wtr1}"
			done
			if prt1="$(_read_option "JA_PRT" "${JA_SPOOL}${wtr1}.wtr")" && \
			[ "${JA_PRT}" = "${prt1}" ]; then
				foundprt="${foundprt:+"${foundprt} "}${JA_PRT}/${wtr1}"
			fi
		fi
		unset wtr1 prt wtr_eml wtr_action wtr_autostr wtr_perms
	done < "${JA_CONF_WTRS}"
	[ -z "${found}" ] || \
		_usr_notify "Error: Output Queue/Writer '${found}' already in use."
	[ -z "${foundprt}" ] || \
		_usr_notify "Error: Printer '${foundprt}' already in use."
	[ -z "${found}" ] && \
	[ -z "${foundprt}" ] || \
		return 1

	if _set_option "${wtr}" "JA_WTR_OUTQS" "${JA_OUTQL}" && \
	_set_option "${wtr}" "JA_PRT" "${JA_PRT}" && \
	_set_option "${wtr}" "JA_WTR_STS" "" && \
	_pipe_write "_jobadmin"; then
		_usr_notify "Starting ${hld:+"a held "}writer '${JA_WTR}' \
to printer '${JA_PRT}' from output queues '${JA_OUTQL}'."
	else
		_usr_notify "Error: Not authorized to manage writer '${JA_WTR}'."
		return 1
	fi
} # strwtr
